Magesh Kuppan

Methodolgy
    No powerpoints
    100% handson driven

Schedule
    Commence    : 9:00 AM
    Tea Break   : 10:30 AM (15 mins)
    Lunch Break : 12:30 PM (45 mins)
    Tea Break   : 3:00 PM (15 mins)
    End         : 4:00 PM

About You
    Name
    Primary Skillset
    Experience in Go
    Context  Go

Repository:
    https://github.com/tkmagesh/intel-go-apr-2022

Why Go?
    History
        Designed in 2007
        Announced in 2009
        1st Go release in 2012

        C
        C++
        Python
        Java
        Ruby
        C#
        Go

    1. Cross Compilation
    2. Backward compatibility
    3. Simplicity
        ONLY 25 keywords
        a. No access modifiers
        b. No execeptions (only errors)
        c. No classes (only structs)
        d. No inhertance (only composition)
        e. No pointer arithmetic
        f. No reference type (all types are value types)
        g. No implicity type conversion

    4. Concurrency
        Ability to have more than one execution path in our application
        1000s of goroutines can be executed with 1 or 2 OS threads
        Concurrency features are built IN the language itself
            go, select, range, channel (data type), <- (channel operator)
            APIs
                sync package
    5. Performance of Go is on par 'C'


    Paradox Of Choice (Barry Schwartz)

System.Threading.Thread t = new System.Threading.Thread(() => {
    // code to run in new thread
});
t.Start();

go func(){

}()

1. go tools
2. Visual Studio Code OR goland

To run a go program
    go run <file_name.go>

To create a build
    go build <file_name.go>
    OR
    go build -o <binary_name> <file_name.go>

Creating builds for different environments (https://go.dev/doc/install/source#environment)
    GOOS=linux GOARCH=amd64 go build -o <binary_name> <file_name.go>
    GOOS=darwin GOARCH=amd64 go build -o <binary_name> <file_name.go>
    GOOS=windows GOARCH=amd64 go build -o <binary_name> <file_name.go>
    
To set environment variables
    go env -w GOOS=windows GOARCH=386


Data Types
    bool
    string

    int
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real [float32] + imaginary [float32])
    complex128 (real [float64] + imaginary [float64])

    byte (alias for uint8)
    rune (alias for int32)(unicode code point)
    
Programming Constructs
    if
    switch
    for 

Assignment:01
    Display the following menu 
        1. Add
        2. Subtract
        3. Multiply
        4. Divide
        5. Exit
    If the user choice is 1 - 4, 
        accept 2 numbers 
        perform the respective operation
        print the result
        display the menu again
    if the user choice is 5
        exit from the application
    If the user enters any other choice 
        display "Invalid choice" 
        display the menu again.
    
Assignment:2
    Refactor the solution for assignemnt:01 using functions in such a way that every function has only one responsibility

Functions
    1. variadics function
    2. anonymous functions
    3. higher order functions
        a. assign a function as a value to a variable
        b. pass a function as an argument to another function
        c. return a function from a function